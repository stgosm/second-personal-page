{"version":3,"sources":["components/Main.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","containerSocialMedia","display","alignItems","flexDirection","justifyContent","height","txtTypography","textAlign","Main","classes","Container","className","container","maxWidth","Typography","variant","color","Grid","item","IconButton","href","fontSize","theme","flexGrow","menuButton","marginRight","spacing","menuToolbar","gridTheme","gridItemTheme","padding","ThemeSwitch","withStyles","margin","switchBase","transform","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","props","Switch","focusVisibleClassName","disableRipple","App","useState","darkMode","setDarkMode","darkTheme","createMuiTheme","type","primary","main","secondary","lightTheme","ThemeProvider","CssBaseline","AppBar","position","Toolbar","component","style","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f22069a1.chunk.js","sourcesContent":["import React from 'react';\nimport { Typography, Container, Grid, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  containerSocialMedia: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '90vh',\n  },\n  txtTypography: {\n      textAlign: 'center',\n  }\n});\n\nfunction Main(){\n    const classes = useStyles();\n\n    return(\n        <>\n            <Container \n            className={classes.containerSocialMedia}\n            container\n            maxWidth=\"md\">\n                <Typography variant=\"h3\" className={classes.txtTypography} color=\"secondary\">Santiago Serrano Márquez</Typography>\n                <Grid item>\n                    <IconButton href=\"https://www.facebook.com/santiago.serrano.marquez\" >\n                        <FacebookIcon fontSize=\"large\" color=\"secondary\"/>\n                    </IconButton>\n                    <IconButton href=\"https://github.com/stgosm\">\n                        <GitHubIcon fontSize=\"large\" color=\"secondary\"/>\n                    </IconButton>\n                    <IconButton href=\"https://www.linkedin.com/in/santiago-serrano-márquez-0a6282159\">\n                        <LinkedInIcon fontSize=\"large\" color=\"secondary\"/>\n                    </IconButton>\n                    <IconButton href=\"https://www.instagram.com/stgosm/?hl=es-la\">\n                        <InstagramIcon fontSize=\"large\" color=\"secondary\"/>\n                    </IconButton>\n                </Grid>\n            </Container>\n        </>\n    )\n}\n\nexport default Main;","import React, { useState } from 'react';\nimport Main from './Main';\nimport { Switch, AppBar, Toolbar, IconButton, Grid } from \"@material-ui/core\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { ThemeProvider, CssBaseline, createMuiTheme } from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  menuToolbar: {\n    display: 'display',\n    justifyContent: 'flex-end',\n  },\n  gridTheme: {\n    width: 'auto',\n  },\n  gridItemTheme: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 0,\n  },\n}));\n\nconst ThemeSwitch = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#607d8b',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#607d8b',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[500]}`,\n    backgroundColor: theme.palette.grey[400],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const classes = useStyles();  \n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n      primary: {\n        main: \"#424242\",\n      },\n      secondary: {\n        main: \"#eceff1\",\n      },\n    }\n  });\n\n  const lightTheme = createMuiTheme({\n    palette: {\n      type: \"light\",\n      primary: {\n        main: \"#37474f\",\n      },\n      secondary: {\n        main: \"#455a64\"\n      },\n    }\n  });\n\n  return (\n    <>\n        <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n          <CssBaseline/>\n          <AppBar position=\"static\" color=\"primary\">\n            <Toolbar className={classes.menuToolbar}>\n              <Grid component=\"label\" container className={classes.gridTheme} alignItems=\"center\" >\n                <Grid item className={classes.gridItemTheme}><Brightness7Icon style={{ fontSize: 20 }} /></Grid>\n                <Grid item className={classes.gridItemTheme}><ThemeSwitch checked={darkMode} onChange={() => setDarkMode(!darkMode)}/></Grid>\n                <Grid item className={classes.gridItemTheme}><NightsStayIcon style={{ fontSize: 20 }} /></Grid>\n              </Grid>\n            </Toolbar>\n          </AppBar>\n          <Main/>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}